// Generated by view binder compiler. Do not edit!
package com.nightroll.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.nightroll.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final MaterialButton btnFilterAll;

  @NonNull
  public final MaterialButton btnFilterClub;

  @NonNull
  public final MaterialButton btnFilterLounge;

  @NonNull
  public final MaterialButton btnFilterRooftop;

  @NonNull
  public final MaterialButton btnRollingTonight;

  @NonNull
  public final RecyclerView recyclerActiveBars;

  @NonNull
  public final RecyclerView recyclerFollowingReels;

  @NonNull
  public final RecyclerView recyclerNearbyBars;

  @NonNull
  public final RecyclerView recyclerTrendingBars;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  private FragmentHomeBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull MaterialButton btnFilterAll, @NonNull MaterialButton btnFilterClub,
      @NonNull MaterialButton btnFilterLounge, @NonNull MaterialButton btnFilterRooftop,
      @NonNull MaterialButton btnRollingTonight, @NonNull RecyclerView recyclerActiveBars,
      @NonNull RecyclerView recyclerFollowingReels, @NonNull RecyclerView recyclerNearbyBars,
      @NonNull RecyclerView recyclerTrendingBars, @NonNull SearchView searchView,
      @NonNull SwipeRefreshLayout swipeRefresh) {
    this.rootView = rootView;
    this.btnFilterAll = btnFilterAll;
    this.btnFilterClub = btnFilterClub;
    this.btnFilterLounge = btnFilterLounge;
    this.btnFilterRooftop = btnFilterRooftop;
    this.btnRollingTonight = btnRollingTonight;
    this.recyclerActiveBars = recyclerActiveBars;
    this.recyclerFollowingReels = recyclerFollowingReels;
    this.recyclerNearbyBars = recyclerNearbyBars;
    this.recyclerTrendingBars = recyclerTrendingBars;
    this.searchView = searchView;
    this.swipeRefresh = swipeRefresh;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_filter_all;
      MaterialButton btnFilterAll = ViewBindings.findChildViewById(rootView, id);
      if (btnFilterAll == null) {
        break missingId;
      }

      id = R.id.btn_filter_club;
      MaterialButton btnFilterClub = ViewBindings.findChildViewById(rootView, id);
      if (btnFilterClub == null) {
        break missingId;
      }

      id = R.id.btn_filter_lounge;
      MaterialButton btnFilterLounge = ViewBindings.findChildViewById(rootView, id);
      if (btnFilterLounge == null) {
        break missingId;
      }

      id = R.id.btn_filter_rooftop;
      MaterialButton btnFilterRooftop = ViewBindings.findChildViewById(rootView, id);
      if (btnFilterRooftop == null) {
        break missingId;
      }

      id = R.id.btn_rolling_tonight;
      MaterialButton btnRollingTonight = ViewBindings.findChildViewById(rootView, id);
      if (btnRollingTonight == null) {
        break missingId;
      }

      id = R.id.recycler_active_bars;
      RecyclerView recyclerActiveBars = ViewBindings.findChildViewById(rootView, id);
      if (recyclerActiveBars == null) {
        break missingId;
      }

      id = R.id.recycler_following_reels;
      RecyclerView recyclerFollowingReels = ViewBindings.findChildViewById(rootView, id);
      if (recyclerFollowingReels == null) {
        break missingId;
      }

      id = R.id.recycler_nearby_bars;
      RecyclerView recyclerNearbyBars = ViewBindings.findChildViewById(rootView, id);
      if (recyclerNearbyBars == null) {
        break missingId;
      }

      id = R.id.recycler_trending_bars;
      RecyclerView recyclerTrendingBars = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTrendingBars == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeRefresh = (SwipeRefreshLayout) rootView;

      return new FragmentHomeBinding((SwipeRefreshLayout) rootView, btnFilterAll, btnFilterClub,
          btnFilterLounge, btnFilterRooftop, btnRollingTonight, recyclerActiveBars,
          recyclerFollowingReels, recyclerNearbyBars, recyclerTrendingBars, searchView,
          swipeRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
