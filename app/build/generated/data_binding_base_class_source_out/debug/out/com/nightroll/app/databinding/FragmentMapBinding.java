// Generated by view binder compiler. Do not edit!
package com.nightroll.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.nightroll.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout bottomSheetBarInfo;

  @NonNull
  public final ImageButton btnCloseBottomSheet;

  @NonNull
  public final MaterialButton btnFollowBar;

  @NonNull
  public final MaterialButton btnGetDirections;

  @NonNull
  public final MaterialButton btnMapActive;

  @NonNull
  public final MaterialButton btnMapAll;

  @NonNull
  public final MaterialButton btnMapNearby;

  @NonNull
  public final FloatingActionButton btnMapStyle;

  @NonNull
  public final FloatingActionButton btnMyLocation;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ImageView imageBarInfo;

  @NonNull
  public final TextView textBarAddress;

  @NonNull
  public final TextView textBarHours;

  @NonNull
  public final TextView textBarName;

  @NonNull
  public final TextView textBarType;

  @NonNull
  public final TextView textBarVibe;

  @NonNull
  public final TextView textFollowers;

  private FragmentMapBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout bottomSheetBarInfo, @NonNull ImageButton btnCloseBottomSheet,
      @NonNull MaterialButton btnFollowBar, @NonNull MaterialButton btnGetDirections,
      @NonNull MaterialButton btnMapActive, @NonNull MaterialButton btnMapAll,
      @NonNull MaterialButton btnMapNearby, @NonNull FloatingActionButton btnMapStyle,
      @NonNull FloatingActionButton btnMyLocation, @NonNull LinearLayout headerLayout,
      @NonNull ImageView imageBarInfo, @NonNull TextView textBarAddress,
      @NonNull TextView textBarHours, @NonNull TextView textBarName, @NonNull TextView textBarType,
      @NonNull TextView textBarVibe, @NonNull TextView textFollowers) {
    this.rootView = rootView;
    this.bottomSheetBarInfo = bottomSheetBarInfo;
    this.btnCloseBottomSheet = btnCloseBottomSheet;
    this.btnFollowBar = btnFollowBar;
    this.btnGetDirections = btnGetDirections;
    this.btnMapActive = btnMapActive;
    this.btnMapAll = btnMapAll;
    this.btnMapNearby = btnMapNearby;
    this.btnMapStyle = btnMapStyle;
    this.btnMyLocation = btnMyLocation;
    this.headerLayout = headerLayout;
    this.imageBarInfo = imageBarInfo;
    this.textBarAddress = textBarAddress;
    this.textBarHours = textBarHours;
    this.textBarName = textBarName;
    this.textBarType = textBarType;
    this.textBarVibe = textBarVibe;
    this.textFollowers = textFollowers;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_sheet_bar_info;
      LinearLayout bottomSheetBarInfo = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetBarInfo == null) {
        break missingId;
      }

      id = R.id.btn_close_bottom_sheet;
      ImageButton btnCloseBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseBottomSheet == null) {
        break missingId;
      }

      id = R.id.btn_follow_bar;
      MaterialButton btnFollowBar = ViewBindings.findChildViewById(rootView, id);
      if (btnFollowBar == null) {
        break missingId;
      }

      id = R.id.btn_get_directions;
      MaterialButton btnGetDirections = ViewBindings.findChildViewById(rootView, id);
      if (btnGetDirections == null) {
        break missingId;
      }

      id = R.id.btn_map_active;
      MaterialButton btnMapActive = ViewBindings.findChildViewById(rootView, id);
      if (btnMapActive == null) {
        break missingId;
      }

      id = R.id.btn_map_all;
      MaterialButton btnMapAll = ViewBindings.findChildViewById(rootView, id);
      if (btnMapAll == null) {
        break missingId;
      }

      id = R.id.btn_map_nearby;
      MaterialButton btnMapNearby = ViewBindings.findChildViewById(rootView, id);
      if (btnMapNearby == null) {
        break missingId;
      }

      id = R.id.btn_map_style;
      FloatingActionButton btnMapStyle = ViewBindings.findChildViewById(rootView, id);
      if (btnMapStyle == null) {
        break missingId;
      }

      id = R.id.btn_my_location;
      FloatingActionButton btnMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnMyLocation == null) {
        break missingId;
      }

      id = R.id.header_layout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.image_bar_info;
      ImageView imageBarInfo = ViewBindings.findChildViewById(rootView, id);
      if (imageBarInfo == null) {
        break missingId;
      }

      id = R.id.text_bar_address;
      TextView textBarAddress = ViewBindings.findChildViewById(rootView, id);
      if (textBarAddress == null) {
        break missingId;
      }

      id = R.id.text_bar_hours;
      TextView textBarHours = ViewBindings.findChildViewById(rootView, id);
      if (textBarHours == null) {
        break missingId;
      }

      id = R.id.text_bar_name;
      TextView textBarName = ViewBindings.findChildViewById(rootView, id);
      if (textBarName == null) {
        break missingId;
      }

      id = R.id.text_bar_type;
      TextView textBarType = ViewBindings.findChildViewById(rootView, id);
      if (textBarType == null) {
        break missingId;
      }

      id = R.id.text_bar_vibe;
      TextView textBarVibe = ViewBindings.findChildViewById(rootView, id);
      if (textBarVibe == null) {
        break missingId;
      }

      id = R.id.text_followers;
      TextView textFollowers = ViewBindings.findChildViewById(rootView, id);
      if (textFollowers == null) {
        break missingId;
      }

      return new FragmentMapBinding((CoordinatorLayout) rootView, bottomSheetBarInfo,
          btnCloseBottomSheet, btnFollowBar, btnGetDirections, btnMapActive, btnMapAll,
          btnMapNearby, btnMapStyle, btnMyLocation, headerLayout, imageBarInfo, textBarAddress,
          textBarHours, textBarName, textBarType, textBarVibe, textFollowers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
