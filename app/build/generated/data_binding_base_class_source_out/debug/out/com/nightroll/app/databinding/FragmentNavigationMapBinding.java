// Generated by view binder compiler. Do not edit!
package com.nightroll.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.nightroll.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNavigationMapBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout bottomSheetPlaceInfo;

  @NonNull
  public final ImageButton btnCloseBottomSheet;

  @NonNull
  public final MaterialButton btnGetDirections;

  @NonNull
  public final FloatingActionButton btnMyLocation;

  @NonNull
  public final MaterialButton btnNavigateToPlace;

  @NonNull
  public final FloatingActionButton btnRecenter;

  @NonNull
  public final FloatingActionButton btnStopNavigation;

  @NonNull
  public final LinearLayout navigationControls;

  @NonNull
  public final TextView textCurrentInstruction;

  @NonNull
  public final TextView textEstimatedTime;

  @NonNull
  public final TextView textOpenStatus;

  @NonNull
  public final TextView textPlaceAddress;

  @NonNull
  public final TextView textPlaceName;

  @NonNull
  public final TextView textPlaceRating;

  @NonNull
  public final TextView textRemainingDistance;

  private FragmentNavigationMapBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout bottomSheetPlaceInfo, @NonNull ImageButton btnCloseBottomSheet,
      @NonNull MaterialButton btnGetDirections, @NonNull FloatingActionButton btnMyLocation,
      @NonNull MaterialButton btnNavigateToPlace, @NonNull FloatingActionButton btnRecenter,
      @NonNull FloatingActionButton btnStopNavigation, @NonNull LinearLayout navigationControls,
      @NonNull TextView textCurrentInstruction, @NonNull TextView textEstimatedTime,
      @NonNull TextView textOpenStatus, @NonNull TextView textPlaceAddress,
      @NonNull TextView textPlaceName, @NonNull TextView textPlaceRating,
      @NonNull TextView textRemainingDistance) {
    this.rootView = rootView;
    this.bottomSheetPlaceInfo = bottomSheetPlaceInfo;
    this.btnCloseBottomSheet = btnCloseBottomSheet;
    this.btnGetDirections = btnGetDirections;
    this.btnMyLocation = btnMyLocation;
    this.btnNavigateToPlace = btnNavigateToPlace;
    this.btnRecenter = btnRecenter;
    this.btnStopNavigation = btnStopNavigation;
    this.navigationControls = navigationControls;
    this.textCurrentInstruction = textCurrentInstruction;
    this.textEstimatedTime = textEstimatedTime;
    this.textOpenStatus = textOpenStatus;
    this.textPlaceAddress = textPlaceAddress;
    this.textPlaceName = textPlaceName;
    this.textPlaceRating = textPlaceRating;
    this.textRemainingDistance = textRemainingDistance;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNavigationMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNavigationMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_navigation_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNavigationMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_sheet_place_info;
      LinearLayout bottomSheetPlaceInfo = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetPlaceInfo == null) {
        break missingId;
      }

      id = R.id.btn_close_bottom_sheet;
      ImageButton btnCloseBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseBottomSheet == null) {
        break missingId;
      }

      id = R.id.btn_get_directions;
      MaterialButton btnGetDirections = ViewBindings.findChildViewById(rootView, id);
      if (btnGetDirections == null) {
        break missingId;
      }

      id = R.id.btn_my_location;
      FloatingActionButton btnMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnMyLocation == null) {
        break missingId;
      }

      id = R.id.btn_navigate_to_place;
      MaterialButton btnNavigateToPlace = ViewBindings.findChildViewById(rootView, id);
      if (btnNavigateToPlace == null) {
        break missingId;
      }

      id = R.id.btn_recenter;
      FloatingActionButton btnRecenter = ViewBindings.findChildViewById(rootView, id);
      if (btnRecenter == null) {
        break missingId;
      }

      id = R.id.btn_stop_navigation;
      FloatingActionButton btnStopNavigation = ViewBindings.findChildViewById(rootView, id);
      if (btnStopNavigation == null) {
        break missingId;
      }

      id = R.id.navigation_controls;
      LinearLayout navigationControls = ViewBindings.findChildViewById(rootView, id);
      if (navigationControls == null) {
        break missingId;
      }

      id = R.id.text_current_instruction;
      TextView textCurrentInstruction = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentInstruction == null) {
        break missingId;
      }

      id = R.id.text_estimated_time;
      TextView textEstimatedTime = ViewBindings.findChildViewById(rootView, id);
      if (textEstimatedTime == null) {
        break missingId;
      }

      id = R.id.text_open_status;
      TextView textOpenStatus = ViewBindings.findChildViewById(rootView, id);
      if (textOpenStatus == null) {
        break missingId;
      }

      id = R.id.text_place_address;
      TextView textPlaceAddress = ViewBindings.findChildViewById(rootView, id);
      if (textPlaceAddress == null) {
        break missingId;
      }

      id = R.id.text_place_name;
      TextView textPlaceName = ViewBindings.findChildViewById(rootView, id);
      if (textPlaceName == null) {
        break missingId;
      }

      id = R.id.text_place_rating;
      TextView textPlaceRating = ViewBindings.findChildViewById(rootView, id);
      if (textPlaceRating == null) {
        break missingId;
      }

      id = R.id.text_remaining_distance;
      TextView textRemainingDistance = ViewBindings.findChildViewById(rootView, id);
      if (textRemainingDistance == null) {
        break missingId;
      }

      return new FragmentNavigationMapBinding((CoordinatorLayout) rootView, bottomSheetPlaceInfo,
          btnCloseBottomSheet, btnGetDirections, btnMyLocation, btnNavigateToPlace, btnRecenter,
          btnStopNavigation, navigationControls, textCurrentInstruction, textEstimatedTime,
          textOpenStatus, textPlaceAddress, textPlaceName, textPlaceRating, textRemainingDistance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
